<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	default-lazy-init="true">

	<description>Redis</description>

	<context:property-placeholder location="classpath:redis.properties" />  
	<context:component-scan base-package="com.module.redis" />
	<!-- redisTemplate -->
  	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
  		<property name="connectionFactory">
  		 	<ref bean="jedisConnectionFactory" />
  		</property>
  		<property name="KeySerializer">
  			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
  		</property>
  		<property name="HashKeySerializer">  
		    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
		</property>    
  		<property name="HashValueSerializer">  
		    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
		</property>  

  		
  	</bean>
	<!-- jedisConnectionFactory -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		<property name="usePool" value="true"/>
		<property name="timeout" value="${redis.timeout}" />
		<property name="database" value="${redis.default.db}"/>
		<property name="poolConfig">
			<ref bean="jedisPoolConfig"/>
		</property> 
	</bean>
 	<!-- JedisPoolConfig -->
 	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxActive}" />  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="minIdle" value="${redis.minIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" /> 
        <property name="testOnReturn" value="${redis.testOnReturn}" /> 
        <property name="testWhileIdle" value="${redis.testWhileIdle}" /> 
        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
    </bean>
	<!-- JedisPool -->
	<bean id = "jedisPool" class="redis.clients.jedis.JedisPool">
      <constructor-arg index="0" ref="jedisPoolConfig"/>
      <constructor-arg index="1" value="${redis.host}"/>
      <constructor-arg index="2" value="${redis.port}" type="int"/>
      <constructor-arg index="3" value="${redis.timeout}" type="int"/>
    </bean>
</beans>
